@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

* {
  box-sizing: border-box;
}

.container {
  margin: 0 auto;
  max-width: 1400px;
  max-width: 800px;
  padding: 0 $gutter;
}

.content-container,
.content-container--small {
  box-sizing: content-box;
  margin: 0 auto;
  max-width: 1600px;
  padding: 8rem 6rem;
}

.content-container--short {
  padding: 8rem 6rem 1rem 6rem;
}

.content-container,
.content-container--small,
.content-container--short {

  @media (max-width: $medium_width) {
    padding: 2rem 2rem;
  }
}

.content-container--small {
  max-width: 800px;
}

.content-container--no-padding {
  margin: 0 auto;
  padding: 2rem 6rem;

  @media (max-width: $medium_width) {
    padding: 2rem 3rem;
  }

}

.row {
  @include clearfix;
  &:not(.collapse) {
    margin-left: -$gutter;
    margin-right: -$gutter;
  }
}

.column {
  float: left;
  padding: 0 $gutter;
  position: relative;
  width: 100%;

  &.end {
    float: right;
  }
}

.row.collapse {
  .column {
    padding: 0;
  }
}


@mixin column-widths($size) {
  @for $n from 1 through $grid_columns {
    &.#{$size}-#{$n} {
      width: ($n/$grid_columns) * 100%;
    }
  }
}

// Small
.column {
  @include column-widths(small);
}

// Medium
@media (min-width: $medium_width) {
  .column {
    @include column-widths(medium);
  }
}

// Large
@media (min-width: $large_width) {
  .column {
    @include column-widths(large);
  }
}
